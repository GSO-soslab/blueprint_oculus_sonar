#!/usr/bin/env python
PACKAGE = "blueprint_oculus_sonar"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Flags for configuring the instrument
# TODO: Possibly, some of these shouldn't be configurable
gen.add("send_range_as_meters", bool_t, 0, "Range is meters (vs. %)", True)
gen.add("send_gain", bool_t, 0, "Send Gain", True)
gen.add("send_simple_return", bool_t, 0, "Send Simple Return message", True)
gen.add("gain_assistance", bool_t, 0, "Gain assistance", False)

numBeams_enum = gen.enum([gen.const("256beams", int_t, 0, "256 Beams"),
                          gen.const("512beams", int_t, 1, "512 Beams")],
                          "An enum to set number of sonar beams")
gen.add("num_beams", int_t, 0, "Number of beams", 1, 0, 1, edit_method=numBeams_enum)

gen.add("range",      double_t, 0, "Range (in meters)",   2, 0, 40)
# We're still not sure precisely what this maps to, but 0 appears to be
# invalid, while 1 is the darkest image.
gen.add("gain",       double_t, 0, "Gain (percentage)",   1, 1, 100)
gen.add("gamma",      int_t,    0, "Gamma correction",  127, 0, 255)

pingRate_enum = gen.enum([  gen.const("Normal",   int_t,  0,  "10Hz max ping rate"),
                            gen.const("High",     int_t,  1,  "15Hz max ping rate"),
                            gen.const("Highest",  int_t,  2,  "40Hz max ping rate"),
                            gen.const("Low",      int_t,  3,  "5Hz max ping rate"),
                            gen.const("Lowest",   int_t,  4,  "2Hz max ping rate"),
                            gen.const("Standby",  int_t,  5,  "0Hz, disable ping")],
                        "An enum to set sonar ping rate")
gen.add("ping_rate",  int_t, 0, "Ping rate (in Hz)", 0, 0, 5, edit_method=pingRate_enum)

# The dataSize enum is explicitly converted to the enum from Oculus.h,
# so there's no need for these to match up.
dataSize_enum = gen.enum([gen.const("8bit", int_t, 1, "8 bit data"),
                          gen.const("16bit", int_t, 2, "16 bit data"),
                          gen.const("32bit", int_t, 4, "32 bit data")],
                        "An enum for setting sonar data size")
gen.add("data_size", int_t, 0, "Data size", 1, 1, 4, edit_method=dataSize_enum)

# These enums should always line up with the definitions in liboculus/SonarConfiguration.h
freqMode_enum = gen.enum([gen.const("LowFrequency",  int_t, 1, "For navigation"),
                          gen.const("HighFrequency", int_t, 2, "For target identification")],
                        "An enum to set sonar frequency mode")

gen.add("freq_mode", int_t, 0, "Sonar mode", 2, 1, 2, edit_method=freqMode_enum)

exit(gen.generate(PACKAGE, "blueprint_oculus_sonar", "OculusSonar"))
